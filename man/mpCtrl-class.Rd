% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mpCtrl-class.R
\docType{class}
\name{mpCtrl-class}
\alias{mpCtrl-class}
\alias{mpCtrl}
\alias{initialize,mpCtrl-method}
\alias{mpCtrl-methods}
\alias{est}
\alias{est-methods}
\alias{est,mpCtrl-method}
\alias{est<-}
\alias{est<--methods}
\alias{est<-,mpCtrl,function-method}
\alias{phcr}
\alias{phcr-methods}
\alias{phcr,mpCtrl-method}
\alias{phcr<-}
\alias{phcr<--methods}
\alias{phcr<-,mpCtrl,function-method}
\alias{hcr}
\alias{hcr-methods}
\alias{hcr,mpCtrl-method}
\alias{hcr<-}
\alias{hcr<--methods}
\alias{hcr<-,mpCtrl,function-method}
\alias{isys}
\alias{isys-methods}
\alias{isys,mpCtrl-method}
\alias{isys<-}
\alias{isys<--methods}
\alias{isys<-,mpCtrl,function-method}
\alias{tm}
\alias{tm-methods}
\alias{tm,mpCtrl-method}
\alias{tm<-}
\alias{tm<--methods}
\alias{tm<-,mpCtrl,function-method}
\alias{show,mpCtrl-method}
\alias{iters,mpCtrl-method}
\alias{exists}
\alias{exists,mpCtrl-method}
\alias{method<-,mpCtrl,function-method}
\alias{method<-,mpCtrl-method}
\alias{method,mpCtrl-method}
\alias{args<-,mpCtrl,function-method}
\alias{args<-,mpCtrl-method}
\title{S4 class \code{mpCtrl}}
\usage{
\S4method{initialize}{mpCtrl}(.Object, ...)

est(object, ...)

\S4method{est}{mpCtrl}(object)

est(object) <- value

\S4method{est}{mpCtrl,`function`}(object) <- value

phcr(object, ...)

\S4method{phcr}{mpCtrl}(object)

phcr(object) <- value

\S4method{phcr}{mpCtrl,`function`}(object) <- value

hcr(object, ...)

\S4method{hcr}{mpCtrl}(object)

hcr(object) <- value

\S4method{hcr}{mpCtrl,`function`}(object) <- value

isys(object, ...)

\S4method{isys}{mpCtrl}(object)

isys(object) <- value

\S4method{isys}{mpCtrl,`function`}(object) <- value

tm(object, ...)

\S4method{tm}{mpCtrl}(object)

tm(object) <- value

\S4method{tm}{mpCtrl,`function`}(object) <- value

\S4method{show}{mpCtrl}(object)

\S4method{iters}{mpCtrl}(object, iter)

exists(
  x,
  where = -1,
  envir = if (missing(frame)) as.environment(where) else sys.frame(frame),
  frame,
  mode = "any",
  inherits = TRUE
)

\S4method{method}{mpCtrl,`function`}(object, element) <- value

\S4method{method}{mpCtrl}(object, element)

\S4method{args}{mpCtrl,`function`}(object, element) <- value
}
\arguments{
\item{...}{additional argument list that might never be used}

\item{object}{object of relevant class (see signature of method)}
}
\description{
The \code{mpCtrl} class defines which modules will be runned and carries the specifications of those modules in \code{mseCtrl} elements.
}
\section{Slots}{

\describe{
\item{est}{\code{mseCtrl} object with estimator of stock abundance specifications.}
\item{phcr}{\code{mseCtrl} object with specifications about parameters needed for harvest control rule which must e computed from estimator results, e.g. Fmsy.}
\item{hcr}{\code{mseCtrl} object with harvest control rule specifications.}
\item{is}{\code{mseCtrl} object with management system specifications, e.g. translation of F into catch limits.}
\item{tm}{\code{mseCtrl} object with technical measures specifications.}
}

\section{Accessors}{

All slots in the class have accessor and replacement methods defined that
allow retrieving and substituting individual slots.

The values passed for replacement need to be of the class of that slot.
A numeric vector can also be used when replacing FLQuant slots, and the
vector will be used to substitute the values in the slot, but not its other
attributes.
}

\section{Constructor}{

A construction method exists for this class that can take named arguments for
any of its slots. All slots are then created to match the requirements of the
class validity. If an unnamed \code{FLQuant} object is provided, this is used
for sizing, but not for populating any slot.
}

